//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 1.1.4322.2032.
// 
namespace osdrmWallet.osdrmAUS {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="opensdrmwsBinding", Namespace="http://www.adetti.pt/opensdrmws")]
    public class opensdrmws : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public opensdrmws() {
            this.Url = "http://localhost/opensdrm/AUS/AUS.ws.php";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://localhost/opensdrm/AUS/AUS.ws.php/AUSrequestModifyUserSubscription", RequestNamespace="http://www.adetti.pt/opensdrmws", ResponseNamespace="http://www.adetti.pt/opensdrmws")]
        [return: System.Xml.Serialization.SoapElementAttribute("result_message")]
        public string AUSrequestModifyUserSubscription(string identification, string signature_algorithm_identifier, string name, string address, string email_address, string authentication_type, string uid, string username, string password, string arbitrary_data, string signature) {
            object[] results = this.Invoke("AUSrequestModifyUserSubscription", new object[] {
                        identification,
                        signature_algorithm_identifier,
                        name,
                        address,
                        email_address,
                        authentication_type,
                        uid,
                        username,
                        password,
                        arbitrary_data,
                        signature});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAUSrequestModifyUserSubscription(string identification, string signature_algorithm_identifier, string name, string address, string email_address, string authentication_type, string uid, string username, string password, string arbitrary_data, string signature, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AUSrequestModifyUserSubscription", new object[] {
                        identification,
                        signature_algorithm_identifier,
                        name,
                        address,
                        email_address,
                        authentication_type,
                        uid,
                        username,
                        password,
                        arbitrary_data,
                        signature}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndAUSrequestModifyUserSubscription(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://localhost/opensdrm/AUS/AUS.ws.php/AUSrequestUserSubscription", RequestNamespace="http://www.adetti.pt/opensdrmws", ResponseNamespace="http://www.adetti.pt/opensdrmws")]
        [return: System.Xml.Serialization.SoapElementAttribute("result_message")]
        public string AUSrequestUserSubscription(string identification, string signature_algorithm_identifier, string name, string address, string email_address, string authentication_type, string username, string password, string public_key, string arbitrary_data, string signature, out string user_id) {
            object[] results = this.Invoke("AUSrequestUserSubscription", new object[] {
                        identification,
                        signature_algorithm_identifier,
                        name,
                        address,
                        email_address,
                        authentication_type,
                        username,
                        password,
                        public_key,
                        arbitrary_data,
                        signature});
            user_id = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAUSrequestUserSubscription(string identification, string signature_algorithm_identifier, string name, string address, string email_address, string authentication_type, string username, string password, string public_key, string arbitrary_data, string signature, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AUSrequestUserSubscription", new object[] {
                        identification,
                        signature_algorithm_identifier,
                        name,
                        address,
                        email_address,
                        authentication_type,
                        username,
                        password,
                        public_key,
                        arbitrary_data,
                        signature}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndAUSrequestUserSubscription(System.IAsyncResult asyncResult, out string user_id) {
            object[] results = this.EndInvoke(asyncResult);
            user_id = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://localhost/opensdrm/AUS/AUS.ws.php/AUSrequestAuthentication", RequestNamespace="http://www.adetti.pt/opensdrmws", ResponseNamespace="http://www.adetti.pt/opensdrmws")]
        [return: System.Xml.Serialization.SoapElementAttribute("result_message")]
        public string AUSrequestAuthentication(string identification, string signature_algorithm_identifier, string authentication_type, string username, string password, string signature, out string user_id) {
            object[] results = this.Invoke("AUSrequestAuthentication", new object[] {
                        identification,
                        signature_algorithm_identifier,
                        authentication_type,
                        username,
                        password,
                        signature});
            user_id = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAUSrequestAuthentication(string identification, string signature_algorithm_identifier, string authentication_type, string username, string password, string signature, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AUSrequestAuthentication", new object[] {
                        identification,
                        signature_algorithm_identifier,
                        authentication_type,
                        username,
                        password,
                        signature}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndAUSrequestAuthentication(System.IAsyncResult asyncResult, out string user_id) {
            object[] results = this.EndInvoke(asyncResult);
            user_id = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://localhost/opensdrm/AUS/AUS.ws.php/AUSrequestDeleteUserSubscription", RequestNamespace="http://www.adetti.pt/opensdrmws", ResponseNamespace="http://www.adetti.pt/opensdrmws")]
        [return: System.Xml.Serialization.SoapElementAttribute("result_message")]
        public string AUSrequestDeleteUserSubscription(string identification, string signature_algorithm_identifier, string uid, string username, string password, string arbitrary_data, string signature) {
            object[] results = this.Invoke("AUSrequestDeleteUserSubscription", new object[] {
                        identification,
                        signature_algorithm_identifier,
                        uid,
                        username,
                        password,
                        arbitrary_data,
                        signature});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAUSrequestDeleteUserSubscription(string identification, string signature_algorithm_identifier, string uid, string username, string password, string arbitrary_data, string signature, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AUSrequestDeleteUserSubscription", new object[] {
                        identification,
                        signature_algorithm_identifier,
                        uid,
                        username,
                        password,
                        arbitrary_data,
                        signature}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndAUSrequestDeleteUserSubscription(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://localhost/opensdrm/AUS/AUS.ws.php/AUSrequestComponentSubscription", RequestNamespace="http://www.adetti.pt/opensdrmws", ResponseNamespace="http://www.adetti.pt/opensdrmws")]
        [return: System.Xml.Serialization.SoapElementAttribute("result_message")]
        public string AUSrequestComponentSubscription(string arbitrary_data, string public_key, string password, out string certificate) {
            object[] results = this.Invoke("AUSrequestComponentSubscription", new object[] {
                        arbitrary_data,
                        public_key,
                        password});
            certificate = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAUSrequestComponentSubscription(string arbitrary_data, string public_key, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AUSrequestComponentSubscription", new object[] {
                        arbitrary_data,
                        public_key,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndAUSrequestComponentSubscription(System.IAsyncResult asyncResult, out string certificate) {
            object[] results = this.EndInvoke(asyncResult);
            certificate = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://localhost/opensdrm/AUS/AUS.ws.php/AUSrequestUserInfo", RequestNamespace="http://www.adetti.pt/opensdrmws", ResponseNamespace="http://www.adetti.pt/opensdrmws")]
        [return: System.Xml.Serialization.SoapElementAttribute("result_message")]
        public string AUSrequestUserInfo(string identification, string signature_algorithm_identifier, string authentication_type, ref string uid, string username, string password, string signature, out string name, out string address, out string email, out string other_data_xml, out string certificate) {
            object[] results = this.Invoke("AUSrequestUserInfo", new object[] {
                        identification,
                        signature_algorithm_identifier,
                        authentication_type,
                        uid,
                        username,
                        password,
                        signature});
            uid = ((string)(results[1]));
            name = ((string)(results[2]));
            address = ((string)(results[3]));
            email = ((string)(results[4]));
            other_data_xml = ((string)(results[5]));
            certificate = ((string)(results[6]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAUSrequestUserInfo(string identification, string signature_algorithm_identifier, string authentication_type, string uid, string username, string password, string signature, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AUSrequestUserInfo", new object[] {
                        identification,
                        signature_algorithm_identifier,
                        authentication_type,
                        uid,
                        username,
                        password,
                        signature}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndAUSrequestUserInfo(System.IAsyncResult asyncResult, out string uid, out string name, out string address, out string email, out string other_data_xml, out string certificate) {
            object[] results = this.EndInvoke(asyncResult);
            uid = ((string)(results[1]));
            name = ((string)(results[2]));
            address = ((string)(results[3]));
            email = ((string)(results[4]));
            other_data_xml = ((string)(results[5]));
            certificate = ((string)(results[6]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://localhost/opensdrm/AUS/AUS.ws.php/AUSrequestUserPaymentInfo", RequestNamespace="http://www.adetti.pt/opensdrmws", ResponseNamespace="http://www.adetti.pt/opensdrmws")]
        [return: System.Xml.Serialization.SoapElementAttribute("result_message")]
        public string AUSrequestUserPaymentInfo(string identification, string signature_algorithm_identifier, string pgw_identification, string user_identification, string pvalue, string signature, out string payclearer) {
            object[] results = this.Invoke("AUSrequestUserPaymentInfo", new object[] {
                        identification,
                        signature_algorithm_identifier,
                        pgw_identification,
                        user_identification,
                        pvalue,
                        signature});
            payclearer = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAUSrequestUserPaymentInfo(string identification, string signature_algorithm_identifier, string pgw_identification, string user_identification, string pvalue, string signature, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AUSrequestUserPaymentInfo", new object[] {
                        identification,
                        signature_algorithm_identifier,
                        pgw_identification,
                        user_identification,
                        pvalue,
                        signature}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndAUSrequestUserPaymentInfo(System.IAsyncResult asyncResult, out string payclearer) {
            object[] results = this.EndInvoke(asyncResult);
            payclearer = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://localhost/opensdrm/AUS/AUS.ws.php/AUSrequestListOfPGW", RequestNamespace="http://www.adetti.pt/opensdrmws", ResponseNamespace="http://www.adetti.pt/opensdrmws")]
        [return: System.Xml.Serialization.SoapElementAttribute("result_message")]
        public string AUSrequestListOfPGW(string identification, string signature_algorithm_identifier, string authentication_type, string signature, out string list_of_pgw) {
            object[] results = this.Invoke("AUSrequestListOfPGW", new object[] {
                        identification,
                        signature_algorithm_identifier,
                        authentication_type,
                        signature});
            list_of_pgw = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAUSrequestListOfPGW(string identification, string signature_algorithm_identifier, string authentication_type, string signature, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AUSrequestListOfPGW", new object[] {
                        identification,
                        signature_algorithm_identifier,
                        authentication_type,
                        signature}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndAUSrequestListOfPGW(System.IAsyncResult asyncResult, out string list_of_pgw) {
            object[] results = this.EndInvoke(asyncResult);
            list_of_pgw = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://localhost/opensdrm/AUS/AUS.ws.php/AUSrequestMutualValidation", RequestNamespace="http://www.adetti.pt/opensdrmws", ResponseNamespace="http://www.adetti.pt/opensdrmws")]
        [return: System.Xml.Serialization.SoapElementAttribute("result_message")]
        public string AUSrequestMutualValidation(string uid, string login, string hash) {
            object[] results = this.Invoke("AUSrequestMutualValidation", new object[] {
                        uid,
                        login,
                        hash});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAUSrequestMutualValidation(string uid, string login, string hash, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AUSrequestMutualValidation", new object[] {
                        uid,
                        login,
                        hash}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndAUSrequestMutualValidation(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://localhost/opensdrm/AUS/AUS.ws.php/AUSrequestWalletVerification", RequestNamespace="http://www.adetti.pt/opensdrmws", ResponseNamespace="http://www.adetti.pt/opensdrmws")]
        [return: System.Xml.Serialization.SoapElementAttribute("result_message")]
        public string AUSrequestWalletVerification(string uid) {
            object[] results = this.Invoke("AUSrequestWalletVerification", new object[] {
                        uid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAUSrequestWalletVerification(string uid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AUSrequestWalletVerification", new object[] {
                        uid}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndAUSrequestWalletVerification(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
    }
}
