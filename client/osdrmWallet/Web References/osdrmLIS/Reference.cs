//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 1.1.4322.2032.
// 
namespace osdrmWallet.osdrmLIS {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="opensdrmwsBinding", Namespace="http://www.adetti.pt/opensdrmws")]
    public class opensdrmws : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public opensdrmws() {
            this.Url = "http://localhost/opensdrm/LIS/LIS.ws.php";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://localhost/opensdrm/LIS/LIS.ws.php/LISrequestContentKeyStore", RequestNamespace="http://www.adetti.pt/opensdrmws", ResponseNamespace="http://www.adetti.pt/opensdrmws")]
        [return: System.Xml.Serialization.SoapElementAttribute("result_message")]
        public string LISrequestContentKeyStore(string key, string cid) {
            object[] results = this.Invoke("LISrequestContentKeyStore", new object[] {
                        key,
                        cid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLISrequestContentKeyStore(string key, string cid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LISrequestContentKeyStore", new object[] {
                        key,
                        cid}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndLISrequestContentKeyStore(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://localhost/opensdrm/LIS/LIS.ws.php/LISrequestLicenseList", RequestNamespace="http://www.adetti.pt/opensdrmws", ResponseNamespace="http://www.adetti.pt/opensdrmws")]
        [return: System.Xml.Serialization.SoapElementAttribute("result_message")]
        public string LISrequestLicenseList(string uid, string cid, out string list_of_licenses) {
            object[] results = this.Invoke("LISrequestLicenseList", new object[] {
                        uid,
                        cid});
            list_of_licenses = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLISrequestLicenseList(string uid, string cid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LISrequestLicenseList", new object[] {
                        uid,
                        cid}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndLISrequestLicenseList(System.IAsyncResult asyncResult, out string list_of_licenses) {
            object[] results = this.EndInvoke(asyncResult);
            list_of_licenses = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://localhost/opensdrm/LIS/LIS.ws.php/LISrequestLicenseDownload", RequestNamespace="http://www.adetti.pt/opensdrmws", ResponseNamespace="http://www.adetti.pt/opensdrmws")]
        [return: System.Xml.Serialization.SoapElementAttribute("result_message")]
        public string LISrequestLicenseDownload(string uid, string cid, string authData, out string license) {
            object[] results = this.Invoke("LISrequestLicenseDownload", new object[] {
                        uid,
                        cid,
                        authData});
            license = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLISrequestLicenseDownload(string uid, string cid, string authData, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LISrequestLicenseDownload", new object[] {
                        uid,
                        cid,
                        authData}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndLISrequestLicenseDownload(System.IAsyncResult asyncResult, out string license) {
            object[] results = this.EndInvoke(asyncResult);
            license = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://localhost/opensdrm/LIS/LIS.ws.php/LISrequestLicenseDownloadSpecial", RequestNamespace="http://www.adetti.pt/opensdrmws", ResponseNamespace="http://www.adetti.pt/opensdrmws")]
        [return: System.Xml.Serialization.SoapElementAttribute("result_message")]
        public string LISrequestLicenseDownloadSpecial(string uid, string cid, string authData, out string license) {
            object[] results = this.Invoke("LISrequestLicenseDownloadSpecial", new object[] {
                        uid,
                        cid,
                        authData});
            license = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLISrequestLicenseDownloadSpecial(string uid, string cid, string authData, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LISrequestLicenseDownloadSpecial", new object[] {
                        uid,
                        cid,
                        authData}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndLISrequestLicenseDownloadSpecial(System.IAsyncResult asyncResult, out string license) {
            object[] results = this.EndInvoke(asyncResult);
            license = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://localhost/opensdrm/LIS/LIS.ws.php/LISrequestLicenseDelete", RequestNamespace="http://www.adetti.pt/opensdrmws", ResponseNamespace="http://www.adetti.pt/opensdrmws")]
        [return: System.Xml.Serialization.SoapElementAttribute("result_message")]
        public string LISrequestLicenseDelete(string uid, string cid) {
            object[] results = this.Invoke("LISrequestLicenseDelete", new object[] {
                        uid,
                        cid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLISrequestLicenseDelete(string uid, string cid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LISrequestLicenseDelete", new object[] {
                        uid,
                        cid}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndLISrequestLicenseDelete(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://localhost/opensdrm/LIS/LIS.ws.php/LISrequestLicenseCreation", RequestNamespace="http://www.adetti.pt/opensdrmws", ResponseNamespace="http://www.adetti.pt/opensdrmws")]
        [return: System.Xml.Serialization.SoapElementAttribute("result_message")]
        public string LISrequestLicenseCreation(string uid, string cid, string licdata) {
            object[] results = this.Invoke("LISrequestLicenseCreation", new object[] {
                        uid,
                        cid,
                        licdata});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLISrequestLicenseCreation(string uid, string cid, string licdata, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LISrequestLicenseCreation", new object[] {
                        uid,
                        cid,
                        licdata}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndLISrequestLicenseCreation(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://localhost/opensdrm/LIS/LIS.ws.php/LISrequestLicenseUpdate", RequestNamespace="http://www.adetti.pt/opensdrmws", ResponseNamespace="http://www.adetti.pt/opensdrmws")]
        [return: System.Xml.Serialization.SoapElementAttribute("result_message")]
        public string LISrequestLicenseUpdate(string uid, string cid, string licdata) {
            object[] results = this.Invoke("LISrequestLicenseUpdate", new object[] {
                        uid,
                        cid,
                        licdata});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLISrequestLicenseUpdate(string uid, string cid, string licdata, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LISrequestLicenseUpdate", new object[] {
                        uid,
                        cid,
                        licdata}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndLISrequestLicenseUpdate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://localhost/opensdrm/LIS/LIS.ws.php/LISrequestLicensePassing", RequestNamespace="http://www.adetti.pt/opensdrmws", ResponseNamespace="http://www.adetti.pt/opensdrmws")]
        [return: System.Xml.Serialization.SoapElementAttribute("result_message")]
        public string LISrequestLicensePassing(string uid_src, string uid_target, string cid, string rights) {
            object[] results = this.Invoke("LISrequestLicensePassing", new object[] {
                        uid_src,
                        uid_target,
                        cid,
                        rights});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLISrequestLicensePassing(string uid_src, string uid_target, string cid, string rights, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LISrequestLicensePassing", new object[] {
                        uid_src,
                        uid_target,
                        cid,
                        rights}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndLISrequestLicensePassing(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
    }
}
